<%# prefer local 'review' set by controller; fallback if needed %>

<% review ||= (@product && user_signed_in? ? @product.reviews.find_or_initialize_by(user: current_user) : Review.new) %>

<%= form_with(model: [@product, review], local: true) do |f| %>
  <div class="mb-2" id="star-rating" data-initial="<%= review.rating || 0 %>">
    <label class="form-label d-block">Your rating</label>
    <div class="d-flex gap-1">
      <% 1.upto(5) do |i| %>
        <button type="button" class="btn btn-sm btn-outline-warning star" data-value="<%= i %>">â˜…</button>
      <% end %>
    </div>
    <%= f.hidden_field :rating, value: review.rating || 0 %>
  </div>

  <div class="mb-3">
    <%= f.label :comment, class: "form-label" %>
    <%= f.text_area :comment, rows: 4, class: "form-control" %>
  </div>

  <%= f.submit review.persisted? ? "Update Review" : "Submit Review", class: "btn btn-primary" %>
<% end %>

<script>
  function initStarRating() {
    var container = document.getElementById("star-rating");
    if (!container) return;
    if (container.dataset.bound === "1") return;
    container.dataset.bound = "1";

    var hidden = container.querySelector('input[name="review[rating]"]');
    var initial = parseInt(container.dataset.initial || "0", 10);

    function paint(rating) {
      container.querySelectorAll(".star").forEach(function(btn) {
        var v = parseInt(btn.dataset.value, 10);
        btn.classList.toggle("btn-warning", v <= rating);
        btn.classList.toggle("btn-outline-warning", v > rating);
      });
    }
    paint(initial);

    container.addEventListener("click", function(e) {
      if (!e.target.classList.contains("star")) return;
      var v = parseInt(e.target.dataset.value, 10);
      hidden.value = v;
      paint(v);
    });
  }
  document.addEventListener("turbo:load", initStarRating);
  document.addEventListener("turbo:frame-load", initStarRating);
  document.addEventListener("DOMContentLoaded", initStarRating);
</script>
